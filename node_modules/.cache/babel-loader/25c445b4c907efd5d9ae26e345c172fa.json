{"ast":null,"code":"var _jsxFileName = \"F:\\\\Github\\\\react-learn\\\\src\\\\component\\\\refDialog\\\\refDialog.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RefDialog(props) {\n  _s();\n\n  // 是否展示对话框\n  const [open, setOpen] = React.useState(false);\n  /**\r\n   * 自定义函数组件暴露给父组件的实例值 参考：https://react.docschina.org/docs/hooks-reference.html#useimperativehandle\r\n   * 这里暴露给父组件一个函数\r\n   */\n\n  React.useImperativeHandle(props.onRef, () => {\n    return {\n      openRefDialog: handleOpen\n    };\n  }); //关闭对话框\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  ; //打开对话框\n\n  function handleOpen() {\n    setOpen(true);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: handleClose,\n    open: open,\n    children: /*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"\\u51FD\\u6570\\u7EC4\\u4EF6\\u7684ref\\u5F15\\u7528\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RefDialog, \"EfE6MdXLZdETJ9V88wcNh85nqyE=\", false, function () {\n  return [React.useImperativeHandle];\n});\n\n_c = RefDialog;\nexport default RefDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"RefDialog\");","map":{"version":3,"sources":["F:/Github/react-learn/src/component/refDialog/refDialog.jsx"],"names":["React","DialogTitle","Dialog","RefDialog","props","open","setOpen","useState","useImperativeHandle","onRef","openRefDialog","handleOpen","handleClose"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAExB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,KAAK,CAACO,QAAN,CAAe,KAAf,CAAxB;AAEA;AACF;AACA;AACA;;AACEP,EAAAA,KAAK,CAACQ,mBAAN,CAA0BJ,KAAK,CAACK,KAAhC,EAAuC,MAAM;AAC3C,WAAO;AACLC,MAAAA,aAAa,EAAEC;AADV,KAAP;AAGD,GAJD,EATwB,CAexB;;AACA,WAASC,WAAT,GAAuB;AACrBN,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD;;AAAA,GAlBuB,CAoBxB;;AACA,WAASK,UAAT,GAAsB;AACpBL,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD;;AAAA;AAED,sBACE,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAEM,WAAjB;AAA8B,IAAA,IAAI,EAAEP,IAApC;AAAA,2BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA9BQF,S;UASPH,KAAK,CAACQ,mB;;;KATCL,S;AAgCT,eAAeA,SAAf","sourcesContent":["import * as React from 'react';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nfunction RefDialog(props) {\r\n\r\n  // 是否展示对话框\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  /**\r\n   * 自定义函数组件暴露给父组件的实例值 参考：https://react.docschina.org/docs/hooks-reference.html#useimperativehandle\r\n   * 这里暴露给父组件一个函数\r\n   */\r\n  React.useImperativeHandle(props.onRef, () => {\r\n    return {\r\n      openRefDialog: handleOpen,\r\n    };\r\n  });\r\n\r\n  //关闭对话框\r\n  function handleClose() {\r\n    setOpen(false);\r\n  };\r\n\r\n  //打开对话框\r\n  function handleOpen() {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open}>\r\n      <DialogTitle>函数组件的ref引用</DialogTitle>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default RefDialog;\r\n"]},"metadata":{},"sourceType":"module"}